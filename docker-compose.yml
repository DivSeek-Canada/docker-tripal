# This is a sample configuration to run a Tripal instance with Docker-Compose.

version: '3'
services:

  tripal:
    build: divseek_canada
    volumes:
      - ./volumes/tripal/html:/var/www/html/sites
      - ./volumes/tripal/private:/var/www/private
    environment:
      UPLOAD_LIMIT: 20M
      MEMORY_LIMIT: 128M
      SITE_NAME: ${GMOD_SITE_NAME}
      BASE_URL_PROTO: ${GMOD_SITE_BASE_URL_PROTO}
      BASE_URL_PATH:  ${GMOD_SITE_BASE_URL_PATH}
      BASE_URL: ${GMOD_SITE_BASE_URL_PROTO}${GMOD_SITE_BASE_HOSTNAME}${GMOD_SITE_BASE_URL_PATH}
      DB_HOST:  chado
      DB_NAME:  postgres
      #ENABLE_CRON_JOBS: 1
      TRIPAL_GIT_CLONE_LIBRARIES: "https://github.com/galaxyproject/blend4php.git"
      TRIPAL_DOWNLOAD_MODULES: "bootstrap maillog smtp jquery_update panels advanced_help"
      #
      # BrAPI module fails to install correctly as of commit 962ffe4 of the tripal/brapi project
      # TRIPAL_GIT_CLONE_MODULES: "https://github.com/tripal/tripal_jbrowse.git https://github.com/tripal/brapi"
      # TRIPAL_ENABLE_MODULES: "bootstrap jquery_update panels advanced_help tripal_jbrowse page_manager tracker forum brapi"
      #
      TRIPAL_GIT_CLONE_MODULES: "https://github.com/tripal/tripal_jbrowse.git"
      TRIPAL_ENABLE_MODULES: "bootstrap maillog smtp jquery_update panels advanced_help page_manager tracker forum tripal_jbrowse tripal_galaxy"
      THEME: "bootstrap"
    ports:
      - "8200:80"
    depends_on:
    - chado
    - elasticsearch

  chado: ## Tripal's Postgres Database
    image: quay.io/galaxy-genome-annotation/chado:1.31-jenkins21-pg9.5
    environment:
      - POSTGRES_PASSWORD=postgres
      # The default chado image would try to install the schema on first run, we just want the tools to be available.
      # The reason why is because Tripal will install the schema for us, but won't be able to run if there's an existing schema
      - INSTALL_CHADO_SCHEMA=0
      - INSTALL_YEAST_DATA=0
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - ./volumes/tripal/db:/var/lib/postgresql/data/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
    environment:
      TAKE_FILE_OWNERSHIP: "true"
    volumes:
      - ./volumes/index:/usr/share/elasticsearch/data
