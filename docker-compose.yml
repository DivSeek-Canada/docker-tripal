# This is a sample configuration to run a Tripal instance with Docker-Compose.

version: '3'
services:

  tripal:
    build:
      context: ./divseek_canada
      dockerfile: Dockerfile
      args:
        DIVSEEK_ADMIN_USER: "${DC_ADMIN_USER}"
        DIVSEEK_DB_HOST: "chado"
    links:
      - chado:postgres
    volumes:
      - ../${DC_CROP}/volumes/tripal/sites:/var/www/html/sites
      - ../${DC_CROP}/volumes/tripal/private:/var/www/private
    environment:
      UPLOAD_LIMIT: 20M
      MEMORY_LIMIT: 128M
      DB_HOST:  "chado"
      DB_NAME: "postgres"
      #
      SITE_NAME: "${DC_SITE_NAME} ${DC_CROP}"
      BASE_URL_PROTO: "${DC_BASE_URL_PROTO}"
      BASE_URL_PATH: "${DC_BASE_URL_PATH}"
      BASE_URL: "${DC_BASE_URL_PROTO}${DC_SITE_BASE_HOSTNAME}${DC_BASE_URL_PATH}"
      #
      TRIPAL_GIT_CLONE_LIBRARIES: "https://github.com/galaxyproject/blend4php.git"
      TRIPAL_DOWNLOAD_MODULES: "bootstrap maillog smtp jquery_update panels advanced_help"
      TRIPAL_GIT_CLONE_MODULES: "https://github.com/tripal/tripal_jbrowse.git https://github.com/tripal/brapi
                                 https://github.com/tripal/trpdownload_api
                                 https://github.com/UofS-Pulse-Binfo/nd_genotypes.git"
      TRIPAL_ENABLE_MODULES: "bootstrap maillog smtp jquery_update panels advanced_help page_manager tracker forum
                             tripal_jbrowse tripal_galaxy brapi tripal_bulk_loader nd_genotypes"
      THEME: "bootstrap"
    ports:
      - "8200:80"
    depends_on:
      - chado
      - elasticsearch

  chado:  ## Tripal's Chado Database
    image: quay.io/galaxy-genome-annotation/chado:1.31-jenkins21-pg9.5
    environment:
      POSTGRES_PASSWORD: "postgres"
      # The default chado image would try to install the schema on first run, we just want the tools to be available.
      # The reason why is because Tripal will install the schema for us, but won't be able to run if there's an existing schema
      INSTALL_CHADO_SCHEMA: 0
      INSTALL_YEAST_DATA: 0
      PGDATA: "/var/lib/postgresql/data/"
    volumes:
      - ../${DC_CROP}/volumes/tripal/db:/var/lib/postgresql/data/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
    environment:
      TAKE_FILE_OWNERSHIP: "true"
    volumes:
      - ../${DC_CROP}/volumes/index:/usr/share/elasticsearch/data
